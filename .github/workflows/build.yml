name: build demo upload
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: install zerotier
        env:
          ZEROTIER_ID: ${{ secrets.ZEROTIER_ID }}
          host: ${{ secrets.HOST }}
        run: |
          curl -s https://install.zerotier.com | sudo bash
          sudo zerotier-cli join "$ZEROTIER_ID"
          ping $host -c 30
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: start build
        run: |
          pnpm install && pnpm build
          mv dist demo
          pwd
          ls
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: rm -rf /home/cym/commonhtml/demo
      - name: copy docs file  ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: demo
          target: /home/cym/commonhtml/
      - name:  delete network
        env:
          ZEROTIER_ID: ${{ secrets.ZEROTIER_ID }}
          ZEROTIER_TOKEN: ${{ secrets.ZEROTIER_TOKEN }}
        run: |
          ip addr
          partial_name="ztrf"
          interfaces=$(ip addr show | grep -oP "(?<=: )$partial_name\S*")
          for interface in $interfaces; do
              ip_address=$(ip addr show $interface | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
          done
          url="https://api.zerotier.com/api/v1/network/$ZEROTIER_ID/member"
          json_response=$(curl -s -X GET -H "Authorization: token $ZEROTIER_TOKEN" "$url")
          echo "$json_response" | jq -c '.[]' | while read -r obj; do
              zero_ip=$(echo "$obj" | jq -r '.config.ipAssignments[0]')
              if [ "$ip_address" = "$zero_ip" ]; then
                  nodeId=$(echo "$obj" | jq -r '.nodeId')
                  urls="https://api.zerotier.com/api/v1/network/$ZEROTIER_ID/member/$nodeId"
                  json_response=$(curl -s -X DELETE -H "Authorization: token $ZEROTIER_TOKEN" "$urls")
                  echo $json_response
              else
                  echo "Strings are not equal"
              fi
          done
      
